export const SomeObjectIdField = {
  kind: 'primitive',
  name: 'id',
  type: 'ID',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const SomeObjectFieldField = {
  kind: 'primitive',
  name: 'field',
  type: 'String',
  description: undefined,
  list: false,
  nonNull: false,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const SomeObjectAnotherField = {
  kind: 'relation',
  name: 'another',
  type: 'AnotherObject',
  description: undefined,
  list: false,
  nonNull: false,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
  targetModel: async () => (await import('./another-object')).AnotherObjectModel,
  asRelation: () => SomeObjectAnotherRelation,
} as const;
export const SomeObjectAnotherRelation = {
  name: 'another',
  field: SomeObjectAnotherField,
  sourceModel: () => SomeObjectModel,
  targetModel: async () => (await import('./another-object')).AnotherObjectModel,
  searchable: undefined,
  label: 'Another',
  reverse: () => SomeObjectAnotherReverseRelation,
} as const;
export const SomeObjectAnotherReverseRelation = {
  name: 'manyObjects',
  field: SomeObjectAnotherField,
  sourceModel: async () => (await import('./another-object')).AnotherObjectModel,
  targetModel: () => SomeObjectModel,
  searchable: undefined,
  label: 'Another',
  reverse: () => SomeObjectAnotherRelation,
  singularName: 'manyObject',
  singularLabel: 'Many Object',
} as const;
export const SomeObjectFloatField = {
  kind: 'primitive',
  name: 'float',
  type: 'Float',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const SomeObjectListField = {
  kind: 'enum',
  name: 'list',
  type: 'SomeEnum',
  description: undefined,
  list: true,
  nonNull: true,
  defaultValue: undefined,
  args: [[{"name":"magic","type":"Boolean"}]],
  directives: [undefined],
} as const;
export const SomeObjectXyzField = {
  kind: 'primitive',
  name: 'xyz',
  type: 'Int',
  description: 'yay',
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const SomeObjectCreatedAtField = {
  kind: 'primitive',
  name: 'createdAt',
  type: 'DateTime',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const SomeObjectCreatedByField = {
  kind: 'relation',
  name: 'createdBy',
  type: 'User',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
  targetModel: async () => (await import('./user')).UserModel,
  asRelation: () => SomeObjectCreatedByRelation,
} as const;
export const SomeObjectCreatedByRelation = {
  name: 'createdBy',
  field: SomeObjectCreatedByField,
  sourceModel: () => SomeObjectModel,
  targetModel: async () => (await import('./user')).UserModel,
  searchable: undefined,
  label: 'Created By',
  reverse: () => SomeObjectCreatedByReverseRelation,
} as const;
export const SomeObjectCreatedByReverseRelation = {
  name: 'createdManyObjects',
  field: SomeObjectCreatedByField,
  sourceModel: async () => (await import('./user')).UserModel,
  targetModel: () => SomeObjectModel,
  searchable: undefined,
  label: 'Created By',
  reverse: () => SomeObjectCreatedByRelation,
  singularName: 'createdManyObject',
  singularLabel: 'Created Many Object',
} as const;
export const SomeObjectUpdatedAtField = {
  kind: 'primitive',
  name: 'updatedAt',
  type: 'DateTime',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const SomeObjectUpdatedByField = {
  kind: 'relation',
  name: 'updatedBy',
  type: 'User',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
  targetModel: async () => (await import('./user')).UserModel,
  asRelation: () => SomeObjectUpdatedByRelation,
} as const;
export const SomeObjectUpdatedByRelation = {
  name: 'updatedBy',
  field: SomeObjectUpdatedByField,
  sourceModel: () => SomeObjectModel,
  targetModel: async () => (await import('./user')).UserModel,
  searchable: undefined,
  label: 'Updated By',
  reverse: () => SomeObjectUpdatedByReverseRelation,
} as const;
export const SomeObjectUpdatedByReverseRelation = {
  name: 'updatedManyObjects',
  field: SomeObjectUpdatedByField,
  sourceModel: async () => (await import('./user')).UserModel,
  targetModel: () => SomeObjectModel,
  searchable: undefined,
  label: 'Updated By',
  reverse: () => SomeObjectUpdatedByRelation,
  singularName: 'updatedManyObject',
  singularLabel: 'Updated Many Object',
} as const;
export const SomeObjectDeletedField = {
  kind: 'primitive',
  name: 'deleted',
  type: 'Boolean',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: false,
  args: [undefined],
  directives: [undefined],
} as const;
export const SomeObjectDeletedAtField = {
  kind: 'primitive',
  name: 'deletedAt',
  type: 'DateTime',
  description: undefined,
  list: false,
  nonNull: false,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const SomeObjectDeletedByField = {
  kind: 'relation',
  name: 'deletedBy',
  type: 'User',
  description: undefined,
  list: false,
  nonNull: false,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
  targetModel: async () => (await import('./user')).UserModel,
  asRelation: () => SomeObjectDeletedByRelation,
} as const;
export const SomeObjectDeletedByRelation = {
  name: 'deletedBy',
  field: SomeObjectDeletedByField,
  sourceModel: () => SomeObjectModel,
  targetModel: async () => (await import('./user')).UserModel,
  searchable: undefined,
  label: 'Deleted By',
  reverse: () => SomeObjectDeletedByReverseRelation,
} as const;
export const SomeObjectDeletedByReverseRelation = {
  name: 'deletedManyObjects',
  field: SomeObjectDeletedByField,
  sourceModel: async () => (await import('./user')).UserModel,
  targetModel: () => SomeObjectModel,
  searchable: undefined,
  label: 'Deleted By',
  reverse: () => SomeObjectDeletedByRelation,
  singularName: 'deletedManyObject',
  singularLabel: 'Deleted Many Object',
} as const;
export const SomeObjectModel = {
  kind: 'entity',
  name: 'SomeObject',
  plural: 'ManyObjects',
  description: 'An object',
  root: false,
  parent: undefined,
  interfaces: [undefined],
  queriable: true,
  listQueriable: true,
  creatable: true,
  updatable: true,
  deletable: true,
  displayField: undefined,
  defaultOrderBy: undefined,
  deleted: false,
  oldName: undefined,
  pluralField: 'manyObjects',
  slug: 'many-objects',
  labelPlural: 'Many Objects',
  label: 'Some Object',
  fields: [SomeObjectIdField, SomeObjectFieldField, SomeObjectAnotherField, SomeObjectFloatField, SomeObjectListField, SomeObjectXyzField, SomeObjectCreatedAtField, SomeObjectCreatedByField, SomeObjectUpdatedAtField, SomeObjectUpdatedByField, SomeObjectDeletedField, SomeObjectDeletedAtField, SomeObjectDeletedByField],
  fieldsByName: {
    id: SomeObjectIdField,
    field: SomeObjectFieldField,
    another: SomeObjectAnotherField,
    float: SomeObjectFloatField,
    list: SomeObjectListField,
    xyz: SomeObjectXyzField,
    createdAt: SomeObjectCreatedAtField,
    createdBy: SomeObjectCreatedByField,
    updatedAt: SomeObjectUpdatedAtField,
    updatedBy: SomeObjectUpdatedByField,
    deleted: SomeObjectDeletedField,
    deletedAt: SomeObjectDeletedAtField,
    deletedBy: SomeObjectDeletedByField,
  },
  relations: [SomeObjectAnotherRelation, SomeObjectCreatedByRelation, SomeObjectUpdatedByRelation, SomeObjectDeletedByRelation],
  relationsByName: {
    another: SomeObjectAnotherRelation,
    createdBy: SomeObjectCreatedByRelation,
    updatedBy: SomeObjectUpdatedByRelation,
    deletedBy: SomeObjectDeletedByRelation,
  }
  ,
} as const;

