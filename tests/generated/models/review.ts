export const ReviewIdField = {
  kind: 'primitive',
  name: 'id',
  type: 'ID',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const ReviewTypeField = {
  kind: 'enum',
  name: 'type',
  type: 'ReactionType',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const ReviewParentField = {
  kind: 'relation',
  name: 'parent',
  type: 'Reaction',
  description: undefined,
  list: false,
  nonNull: false,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
  targetModel: async () => (await import('./reaction')).ReactionModel,
  asRelation: () => ReviewParentRelation,
} as const;
export const ReviewParentRelation = {
  name: 'parent',
  field: ReviewParentField,
  sourceModel: () => ReviewModel,
  targetModel: async () => (await import('./reaction')).ReactionModel,
  searchable: undefined,
  label: 'Parent',
  reverse: () => ReviewParentReverseRelation,
} as const;
export const ReviewParentReverseRelation = {
  name: 'childReviews',
  field: ReviewParentField,
  sourceModel: async () => (await import('./reaction')).ReactionModel,
  targetModel: () => ReviewModel,
  searchable: undefined,
  label: 'Parent',
  reverse: () => ReviewParentRelation,
  singularName: 'childReview',
  singularLabel: 'Child Review',
} as const;
export const ReviewContentField = {
  kind: 'primitive',
  name: 'content',
  type: 'String',
  description: undefined,
  list: false,
  nonNull: false,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const ReviewCreatedAtField = {
  kind: 'primitive',
  name: 'createdAt',
  type: 'DateTime',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const ReviewCreatedByField = {
  kind: 'relation',
  name: 'createdBy',
  type: 'User',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
  targetModel: async () => (await import('./user')).UserModel,
  asRelation: () => ReviewCreatedByRelation,
} as const;
export const ReviewCreatedByRelation = {
  name: 'createdBy',
  field: ReviewCreatedByField,
  sourceModel: () => ReviewModel,
  targetModel: async () => (await import('./user')).UserModel,
  searchable: undefined,
  label: 'Created By',
  reverse: () => ReviewCreatedByReverseRelation,
} as const;
export const ReviewCreatedByReverseRelation = {
  name: 'createdReviews',
  field: ReviewCreatedByField,
  sourceModel: async () => (await import('./user')).UserModel,
  targetModel: () => ReviewModel,
  searchable: undefined,
  label: 'Created By',
  reverse: () => ReviewCreatedByRelation,
  singularName: 'createdReview',
  singularLabel: 'Created Review',
} as const;
export const ReviewUpdatedAtField = {
  kind: 'primitive',
  name: 'updatedAt',
  type: 'DateTime',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const ReviewUpdatedByField = {
  kind: 'relation',
  name: 'updatedBy',
  type: 'User',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
  targetModel: async () => (await import('./user')).UserModel,
  asRelation: () => ReviewUpdatedByRelation,
} as const;
export const ReviewUpdatedByRelation = {
  name: 'updatedBy',
  field: ReviewUpdatedByField,
  sourceModel: () => ReviewModel,
  targetModel: async () => (await import('./user')).UserModel,
  searchable: undefined,
  label: 'Updated By',
  reverse: () => ReviewUpdatedByReverseRelation,
} as const;
export const ReviewUpdatedByReverseRelation = {
  name: 'updatedReviews',
  field: ReviewUpdatedByField,
  sourceModel: async () => (await import('./user')).UserModel,
  targetModel: () => ReviewModel,
  searchable: undefined,
  label: 'Updated By',
  reverse: () => ReviewUpdatedByRelation,
  singularName: 'updatedReview',
  singularLabel: 'Updated Review',
} as const;
export const ReviewDeletedField = {
  kind: 'primitive',
  name: 'deleted',
  type: 'Boolean',
  description: undefined,
  list: false,
  nonNull: true,
  defaultValue: false,
  args: [undefined],
  directives: [undefined],
} as const;
export const ReviewDeletedAtField = {
  kind: 'primitive',
  name: 'deletedAt',
  type: 'DateTime',
  description: undefined,
  list: false,
  nonNull: false,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const ReviewDeletedByField = {
  kind: 'relation',
  name: 'deletedBy',
  type: 'User',
  description: undefined,
  list: false,
  nonNull: false,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
  targetModel: async () => (await import('./user')).UserModel,
  asRelation: () => ReviewDeletedByRelation,
} as const;
export const ReviewDeletedByRelation = {
  name: 'deletedBy',
  field: ReviewDeletedByField,
  sourceModel: () => ReviewModel,
  targetModel: async () => (await import('./user')).UserModel,
  searchable: undefined,
  label: 'Deleted By',
  reverse: () => ReviewDeletedByReverseRelation,
} as const;
export const ReviewDeletedByReverseRelation = {
  name: 'deletedReviews',
  field: ReviewDeletedByField,
  sourceModel: async () => (await import('./user')).UserModel,
  targetModel: () => ReviewModel,
  searchable: undefined,
  label: 'Deleted By',
  reverse: () => ReviewDeletedByRelation,
  singularName: 'deletedReview',
  singularLabel: 'Deleted Review',
} as const;
export const ReviewRatingField = {
  kind: 'primitive',
  name: 'rating',
  type: 'Float',
  description: undefined,
  list: false,
  nonNull: false,
  defaultValue: undefined,
  args: [undefined],
  directives: [undefined],
} as const;
export const ReviewModel = {
  kind: 'entity',
  name: 'Review',
  plural: 'Reviews',
  description: undefined,
  root: false,
  parent: 'Reaction',
  interfaces: [undefined],
  queriable: true,
  listQueriable: true,
  creatable: true,
  updatable: true,
  deletable: true,
  displayField: undefined,
  defaultOrderBy: undefined,
  deleted: false,
  oldName: undefined,
  pluralField: 'reviews',
  slug: 'reviews',
  labelPlural: 'Reviews',
  label: 'Review',
  fields: [ReviewIdField, ReviewTypeField, ReviewParentField, ReviewContentField, ReviewCreatedAtField, ReviewCreatedByField, ReviewUpdatedAtField, ReviewUpdatedByField, ReviewDeletedField, ReviewDeletedAtField, ReviewDeletedByField, ReviewRatingField],
  fieldsByName: {
    id: ReviewIdField,
    type: ReviewTypeField,
    parent: ReviewParentField,
    content: ReviewContentField,
    createdAt: ReviewCreatedAtField,
    createdBy: ReviewCreatedByField,
    updatedAt: ReviewUpdatedAtField,
    updatedBy: ReviewUpdatedByField,
    deleted: ReviewDeletedField,
    deletedAt: ReviewDeletedAtField,
    deletedBy: ReviewDeletedByField,
    rating: ReviewRatingField,
  },
  relations: [ReviewParentRelation, ReviewCreatedByRelation, ReviewUpdatedByRelation, ReviewDeletedByRelation],
  relationsByName: {
    parent: ReviewParentRelation,
    createdBy: ReviewCreatedByRelation,
    updatedBy: ReviewUpdatedByRelation,
    deletedBy: ReviewDeletedByRelation,
  }
  ,
} as const;

