"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[188],{4695:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"migration-guides","title":"Migration Guides","description":"Upgrading to v17.2.0","source":"@site/docs/11-migration-guides.md","sourceDirName":".","slug":"/migration-guides","permalink":"/graphql-magic/docs/migration-guides","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":11,"frontMatter":{},"sidebar":"sidebar","previous":{"title":"Admin UI (TODO)","permalink":"/graphql-magic/docs/admin-ui"}}');var s=i(4848),o=i(8453);const r={},d="Migration Guides",a={},c=[{value:"Upgrading to v17.2.0",id:"upgrading-to-v1720",level:2}];function l(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"migration-guides",children:"Migration Guides"})}),"\n",(0,s.jsx)(e.h2,{id:"upgrading-to-v1720",children:"Upgrading to v17.2.0"}),"\n",(0,s.jsx)(e.p,{children:"From now on, foreign keys will be indexed by default. For existing projects, you'll need to add indices manually to your existing foreign keys."}),"\n",(0,s.jsx)(e.p,{children:"Here's a sample script to generate the migration:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"import { execSync } from 'child_process';\nimport { writeFileSync } from 'fs';\nimport { models } from '../../../src/config/models';\n\nconst start = async () => {\n  const instructions: string[] = [];\n\n  instructions.push(`import { Knex } from 'knex';\n\nexport const up = async (knex: Knex) => {`);\n\n  for (const model of models.entities) {\n    if (model.fields.some((field) => field.kind === 'relation')) {\n      instructions.push(`await knex.schema.alterTable('${model.name}', (table) => {`);\n      for (const field of model.fields) {\n        if (field.kind === 'relation') {\n          instructions.push(`table.index('${field.foreignKey || field.name + 'Id'}');`);\n        }\n      }\n      instructions.push(`});`);\n    }\n  }\n\n  instructions.push(`};`);\n\n  instructions.push(`export const down = async (knex: Knex) => {`);\n\n  for (const model of models.entities) {\n    if (model.fields.some((field) => field.kind === 'relation')) {\n      instructions.push(`await knex.schema.alterTable('${model.name}', (table) => {`);\n      for (const field of model.fields) {\n        if (field.kind === 'relation') {\n          instructions.push(`table.dropIndex('${field.foreignKey || field.name + 'Id'}');`);\n        }\n      }\n      instructions.push(`});`);\n    }\n  }\n\n  instructions.push(`};`);\n\n  writeFileSync('migrations/20250305130109_create-foreign-key-indices.ts', instructions.join('\\n'));\n  execSync('npx eslint --fix migrations/20250305130109_create-foreign-key-indices.ts');\n};\n\nvoid start();\n"})})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>d});var t=i(6540);const s={},o=t.createContext(s);function r(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);