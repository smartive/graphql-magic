"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[244],{2914:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var d=s(4848),l=s(8453);const i={},t="Models",a={id:"models",title:"Models",description:"The source of truth for graphql-magic is the models object, usually defined in src/config/models.ts. This is the minimal models:",source:"@site/docs/2-models.md",sourceDirName:".",slug:"/models",permalink:"/graphql-magic/docs/models",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"sidebar",previous:{title:"Tutorial",permalink:"/graphql-magic/docs/tutorial"},next:{title:"Fields",permalink:"/graphql-magic/docs/fields"}},r={},c=[{value:"Entities",id:"entities",level:2},{value:"<code>description</code>",id:"description",level:3},{value:"<code>plural</code>",id:"plural",level:3},{value:"<code>creatable</code>",id:"creatable",level:3},{value:"<code>updatable</code>",id:"updatable",level:3},{value:"<code>deletable</code>",id:"deletable",level:3},{value:"<code>queriable</code>",id:"queriable",level:3},{value:"<code>listQueriable</code>",id:"listqueriable",level:3},{value:"<code>displayField</code>",id:"displayfield",level:3},{value:"<code>defaultOrderBy</code>",id:"defaultorderby",level:3},{value:"<code>fields</code>",id:"fields",level:3},{value:"Scalars",id:"scalars",level:2},{value:"Enums",id:"enums",level:2},{value:"Raw enums",id:"raw-enums",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Objects",id:"objects",level:2},{value:"Inputs",id:"inputs",level:2}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h1,{id:"models",children:"Models"}),"\n",(0,d.jsxs)(n.p,{children:["The source of truth for ",(0,d.jsx)(n.code,{children:"graphql-magic"})," is the ",(0,d.jsx)(n.code,{children:"models"})," object, usually defined in ",(0,d.jsx)(n.code,{children:"src/config/models.ts"}),". This is the minimal models:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"const modelDefinitions: ModelDefinitions = [\n  {\n    kind: 'entity',\n    name: 'User',\n    fields: [\n    ]\n  },\n]\n\nexport const models = new Models(modelDefinitions)\n"})}),"\n",(0,d.jsx)(n.p,{children:"Models can have the following kinds:"}),"\n",(0,d.jsx)(n.h2,{id:"entities",children:"Entities"}),"\n",(0,d.jsxs)(n.p,{children:["The most powerful model kind. Entities are models that are stored in database tables, and are defined with ",(0,d.jsx)(n.code,{children:"kind: 'entity'"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"{\n    kind: 'entity',\n    name: 'Post',\n    fields: [\n        // ...\n    ]\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:"These are the entity options:"}),"\n",(0,d.jsx)(n.h3,{id:"description",children:(0,d.jsx)(n.code,{children:"description"})}),"\n",(0,d.jsx)(n.p,{children:"Will appear as description in the graphql schema."}),"\n",(0,d.jsx)(n.h3,{id:"plural",children:(0,d.jsx)(n.code,{children:"plural"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"graphql-magic"})," detects natural language plurals of model names with the ",(0,d.jsx)(n.code,{children:"inflection"})," npm package. You can override this here."]}),"\n",(0,d.jsx)(n.h3,{id:"creatable",children:(0,d.jsx)(n.code,{children:"creatable"})}),"\n",(0,d.jsxs)(n.p,{children:["When ",(0,d.jsx)(n.code,{children:"creatable"})," is ",(0,d.jsx)(n.code,{children:"true"}),", the entity can be created using a dedicated graphql ",(0,d.jsx)(n.code,{children:"create<ModelName>"})," mutation."]}),"\n",(0,d.jsxs)(n.p,{children:["For this to work, at least one entity field needs to be marked as ",(0,d.jsx)(n.code,{children:"creatable"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"creatable"})," also accepts an object to override properties of the implicitly generated ",(0,d.jsx)(n.code,{children:"createdBy"})," and ",(0,d.jsx)(n.code,{children:"createdAt"})," fields."]}),"\n",(0,d.jsx)(n.h3,{id:"updatable",children:(0,d.jsx)(n.code,{children:"updatable"})}),"\n",(0,d.jsxs)(n.p,{children:["When ",(0,d.jsx)(n.code,{children:"updatable"})," is ",(0,d.jsx)(n.code,{children:"true"}),", the entity can be created using a dedicated graphql ",(0,d.jsx)(n.code,{children:"delete<ModelName>"})," mutation."]}),"\n",(0,d.jsxs)(n.p,{children:["For this to work, at least one entity field needs to be marked as ",(0,d.jsx)(n.code,{children:"updatable"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"updatable"})," also accepts an object to override properties of the implicitly generated ",(0,d.jsx)(n.code,{children:"updatedBy"})," and ",(0,d.jsx)(n.code,{children:"updatedAt"})," fields."]}),"\n",(0,d.jsxs)(n.p,{children:["If a field is updatable, a ",(0,d.jsx)(n.code,{children:"<ModelName>Revisions"})," table is created (containing only the updatable fields) and extended with each update."]}),"\n",(0,d.jsx)(n.h3,{id:"deletable",children:(0,d.jsx)(n.code,{children:"deletable"})}),"\n",(0,d.jsxs)(n.p,{children:["When ",(0,d.jsx)(n.code,{children:"deletable"})," is ",(0,d.jsx)(n.code,{children:"true"}),", the entity can be created using a dedicated graphql ",(0,d.jsx)(n.code,{children:"delete<ModelName>"})," mutation."]}),"\n",(0,d.jsxs)(n.p,{children:["This is a soft delete (the ",(0,d.jsx)(n.code,{children:"deleted"})," field is set to ",(0,d.jsx)(n.code,{children:"true"}),"), and the entity can be restored with the graphql ",(0,d.jsx)(n.code,{children:"restore<ModelName>"})," mutation."]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"deletable"})," also accepts an object to override properties of the implicitly generated ",(0,d.jsx)(n.code,{children:"deleted"}),", ",(0,d.jsx)(n.code,{children:"deletedBy"})," and ",(0,d.jsx)(n.code,{children:"deletedAt"})," fields."]}),"\n",(0,d.jsx)(n.h3,{id:"queriable",children:(0,d.jsx)(n.code,{children:"queriable"})}),"\n",(0,d.jsxs)(n.p,{children:["When ",(0,d.jsx)(n.code,{children:"queriable"})," is ",(0,d.jsx)(n.code,{children:"true"})," a graphql ",(0,d.jsx)(n.code,{children:"Query"})," becomes available to fetch exactly one element by id."]}),"\n",(0,d.jsx)(n.p,{children:"For example, with"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"{\n    kind: 'entity',\n    name: 'Post',\n    queriable: true\n    ...\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:"the following graphql query becomes possible"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:'query {\n    post(where: { id: "bf9496bb-9302-4528-aebc-c97ae49c52fa"}) {\n        title\n    }\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"listqueriable",children:(0,d.jsx)(n.code,{children:"listQueriable"})}),"\n",(0,d.jsxs)(n.p,{children:["When ",(0,d.jsx)(n.code,{children:"listQueriable"})," is ",(0,d.jsx)(n.code,{children:"true"})," a graphql ",(0,d.jsx)(n.code,{children:"Query"})," becomes available to fetch a list of elements of this model."]}),"\n",(0,d.jsx)(n.p,{children:"For example, with"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"{\n    kind: 'entity',\n    name: 'Post',\n    listQueriable: true\n    ...\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:"the following graphql query becomes possible"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"query {\n    posts {\n        title\n    }\n}\n"})}),"\n",(0,d.jsx)(n.h3,{id:"displayfield",children:(0,d.jsx)(n.code,{children:"displayField"})}),"\n",(0,d.jsxs)(n.p,{children:["The name of the field that ought to be used as display value, e.g. a ",(0,d.jsx)(n.code,{children:"Post"}),"'s ",(0,d.jsx)(n.code,{children:"title"}),"."]}),"\n",(0,d.jsx)(n.h3,{id:"defaultorderby",children:(0,d.jsx)(n.code,{children:"defaultOrderBy"})}),"\n",(0,d.jsxs)(n.p,{children:["An array of orders with the same structure as the ",(0,d.jsx)(n.code,{children:"orderBy"})," parameters in graphql queries. The implicit default order by is ",(0,d.jsx)(n.code,{children:"[{ createdAt: 'DESC }]"}),"."]}),"\n",(0,d.jsx)(n.h3,{id:"fields",children:(0,d.jsx)(n.code,{children:"fields"})}),"\n",(0,d.jsxs)(n.p,{children:["An array of fields. See ",(0,d.jsx)(n.a,{href:"./fields",children:"fields"})]}),"\n",(0,d.jsx)(n.h2,{id:"scalars",children:"Scalars"}),"\n",(0,d.jsx)(n.p,{children:"Used for graphql scalars, e.g."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"{\n    kind: 'Scalar',\n    name: 'DateTime'\n}\n"})}),"\n",(0,d.jsx)(n.h2,{id:"enums",children:"Enums"}),"\n",(0,d.jsx)(n.p,{children:"An enum that is available as type in the database:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"{\n    kind: 'enum',\n    name: 'Role',\n    values: ['ADMIN', 'MODERATOR', 'USER']\n}\n"})}),"\n",(0,d.jsx)(n.h2,{id:"raw-enums",children:"Raw enums"}),"\n",(0,d.jsxs)(n.p,{children:["An enum that is ",(0,d.jsx)(n.em,{children:"not"})," available as type in the database:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"{\n    kind: 'raw-enum',\n    name: 'Role',\n    values: ['ADMIN', 'MODERATOR', 'USER']\n}\n"})}),"\n",(0,d.jsx)(n.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,d.jsx)(n.p,{children:"Types that can be inherited from, e.g."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"{\n    kind: 'interface',\n    name: 'WithContent',\n    fields: [\n        {\n            type: 'String',\n            name: 'content'\n        }\n    ]\n},\n{\n    kind: 'entity',\n    name: 'Post',\n    interfaces: ['WithContent']\n    fields: [\n        {\n            type: 'String',\n            name: 'content'\n        }\n    ]\n}\n"})}),"\n",(0,d.jsx)(n.h2,{id:"objects",children:"Objects"}),"\n",(0,d.jsxs)(n.p,{children:["Custom types that ",(0,d.jsx)(n.em,{children:"don't"})," correspond to database tables. To be used e.g. as return types for custom resolvers or JSON fields. These can also be used to extend ",(0,d.jsx)(n.code,{children:"Query"})," or ",(0,d.jsx)(n.code,{children:"Mutation"})," which are themselves of that type. E.g."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"{\n    kind: 'object',\n    name: 'Stats',\n    fields: [\n        {\n            name: 'usersCount'\n            type: 'Int'\n        },\n        {\n            name: 'postsCount',\n            type: 'Int'\n        }\n    ]\n},\n{\n    kind: 'object',\n    name: 'Query',\n    fields: [\n        // You'll need to define a custom resolver for this one\n        {\n            kind: 'custom',\n            name: 'stats',\n            type: 'Stats'\n        }\n    ]\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:"will make this query possible:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"query {\n    stats {\n        usersCount\n        postsCount\n    }\n}\n"})}),"\n",(0,d.jsx)(n.h2,{id:"inputs",children:"Inputs"}),"\n",(0,d.jsx)(n.p,{children:"A custom input type. To be combined with custom mutations, e.g."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"{\n    kind: 'input',\n    name: 'BulkDeleteWhereInput'\n    fields: [\n        {\n            kind: 'ID',\n            name: 'ids',\n            list: true\n        }\n    ]\n},\n{\n    kind: 'object',\n    name: 'Mutation',\n    fields: [\n        // You'll need to define a custom resolver for this one\n        {\n            kind: 'custom',\n            name: 'bulkDelete',\n            args: [\n                {\n                    kind: 'custom',\n                    name: 'where',\n                    type: 'BulkDeleteWhereInput'\n                }\n            ]\n            type: 'Boolean'\n        }\n    ]\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:"will make this mutation possible:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"mutation {\n    bulkDelete(where: { ids: [...]})\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var d=s(6540);const l={},i=d.createContext(l);function t(e){const n=d.useContext(i);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),d.createElement(i.Provider,{value:n},e.children)}}}]);