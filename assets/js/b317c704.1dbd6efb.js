"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[664],{166:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=s(4848),r=s(8453);const o={},i="Graphql server",l={id:"graphql-server",title:"Graphql server",description:"executeQuery",source:"@site/docs/6-graphql-server.md",sourceDirName:".",slug:"/graphql-server",permalink:"/graphql-magic/docs/graphql-server",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"sidebar",previous:{title:"Migrations",permalink:"/graphql-magic/docs/migrations"},next:{title:"Graphql querying",permalink:"/graphql-magic/docs/graphql-client"}},a={},c=[{value:"<code>executeQuery</code>",id:"executequery",level:2},{value:"Graphql API",id:"graphql-api",level:2},{value:"Custom resolvers",id:"custom-resolvers",level:2},{value:"Custom queries",id:"custom-queries",level:3},{value:"Custom mutations",id:"custom-mutations",level:3},{value:"Custom model resolvers",id:"custom-model-resolvers",level:3},{value:"Mutation hooks",id:"mutation-hooks",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"graphql-server",children:"Graphql server"}),"\n",(0,t.jsx)(n.h2,{id:"executequery",children:(0,t.jsx)(n.code,{children:"executeQuery"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"graphql-magic"})," generates an ",(0,t.jsx)(n.code,{children:"execute.ts"})," file for you, with this structure:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import knexConfig from \"@/knexfile\";\nimport { Context, User, execute } from \"@smartive/graphql-magic\";\nimport { randomUUID } from \"crypto\";\nimport { knex } from 'knex';\nimport { DateTime } from \"luxon\";\nimport { models } from \"../config/models\";\n\nexport const executeGraphql = async <T, V = undefined>(\n  body: {\n    query: string;\n    operationName?: string;\n    variables?: V;\n    options?: { email?: string };\n}): Promise<{ data: T }> => {\n  const db = knex(knexConfig);\n  let user: User | undefined;\n  // TODO: get user\n\n  const result = await execute({\n    req: null as unknown as Context['req'],\n    body,\n    knex: db as unknown as Context['knex'],\n    locale: 'en',\n    locales: ['en'],\n    user,\n    models: models,\n    permissions: { ADMIN: true, UNAUTHENTICATED: true },\n    now: DateTime.local(),\n  });\n  await db.destroy();\n\n  // https://github.com/vercel/next.js/issues/47447#issuecomment-1500371732\n  return JSON.parse(JSON.stringify(result)) as { data: T };\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"This is where you can set up your graphql server with"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["user authentication (see the ",(0,t.jsx)(n.a,{href:"./tutorial",children:"Tutorial"})," for an example with auth0)"]}),"\n",(0,t.jsxs)(n.li,{children:["custom resolvers (see ",(0,t.jsx)(n.a,{href:"#custom-resolvers",children:"Custom resolvers"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["mutation hooks (see ",(0,t.jsx)(n.a,{href:"#mutation-hooks",children:"Mutation hooks"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"graphql-api",children:"Graphql API"}),"\n",(0,t.jsxs)(n.p,{children:["If you only need to execute graphql on the server (e.g. on ",(0,t.jsx)(n.code,{children:"next.js"})," server components or server actions), you don't need a graphql endpoint.\nIf you need client side querying, use ",(0,t.jsx)(n.code,{children:"executeGraphql"})," to create a graphql endpoint, e.g. in ",(0,t.jsx)(n.code,{children:"src/app/api/graphql/route.ts"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"export const POST = (req) => {\n    return await executeGraphql(req.body)\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"custom-resolvers",children:"Custom resolvers"}),"\n",(0,t.jsxs)(n.p,{children:["Sometimes you'll need a custom resolver, at the level of root queries, mutations or existing models. For that you need to create a ",(0,t.jsx)(n.code,{children:"additionalResolvers"})," object."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"export const additionalResolvers = {\n    // custom resolvers go here\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Then feed it to ",(0,t.jsx)(n.code,{children:"graphql-magic"}),"'s ",(0,t.jsx)(n.code,{children:"execute"})," function:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const result = await execute({\n    ...\n    additionalResolvers\n})\n"})}),"\n",(0,t.jsx)(n.h3,{id:"custom-queries",children:"Custom queries"}),"\n",(0,t.jsxs)(n.p,{children:["For that you'll need to extend the ",(0,t.jsx)(n.code,{children:"Query"})," model (and define any needed additional models), e.g.:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"{\n    kind: 'object',\n    name: 'Stats',\n    fields: [\n        {\n            name: 'usersCount'\n            type: 'Int'\n        },\n        {\n            name: 'postsCount',\n            type: 'Int'\n        }\n    ]\n},\n{\n    kind: 'object',\n    name: 'Query',\n    fields: [\n        // You'll need to define a custom resolver for this one\n        {\n            kind: 'custom',\n            name: 'stats',\n            type: 'Stats'\n        }\n    ]\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"then implement the custom resolver as usual:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const additionalResolvers = {\n    Query: {\n        stats: (parent, args, ctx, schema) => {\n            // Implement custom resolver here\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"custom-mutations",children:"Custom mutations"}),"\n",(0,t.jsxs)(n.p,{children:["For that you'll need to extend the ",(0,t.jsx)(n.code,{children:"Mutation"})," model (and define any needed additional models), e.g.:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"{\n    kind: 'input',\n    name: 'BulkDeleteWhereInput'\n    fields: [\n        {\n            kind: 'ID',\n            name: 'ids',\n            list: true\n        }\n    ]\n},\n{\n    kind: 'object',\n    name: 'Mutation',\n    fields: [\n        // You'll need to define a custom resolver for this one\n        {\n            kind: 'custom',\n            name: 'bulkDelete',\n            args: [\n                {\n                    kind: 'custom',\n                    name: 'where',\n                    type: 'BulkDeleteWhereInput'\n                }\n            ]\n            type: 'Boolean'\n        }\n    ]\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"then implement the custom resolver as usual:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const additionalResolvers = {\n    Mutation: {\n        bulkDelete: (parent, args, ctx, schema) => {\n            // Implement custom resolver here\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"custom-model-resolvers",children:"Custom model resolvers"}),"\n",(0,t.jsxs)(n.p,{children:["Sometimes you need to add a custom field to an existing model. For that, add a field of ",(0,t.jsx)(n.code,{children:"kind: 'custom'"})," to the model."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"{\n    kind: 'entity',\n    name: 'User',\n    fields: [\n        // ...\n        {\n            kind: 'custom',\n            name: 'isAdmin',\n            type: 'Boolean'\n        }\n    ]\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"then implement the custom resolver as usual:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const additionalResolvers = {\n    User: {\n        isAdmin: (parent, args, ctx, schema) => {\n            // Implement custom resolver here\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"mutation-hooks",children:"Mutation hooks"}),"\n",(0,t.jsx)(n.p,{children:"Sometimes you'll need some custom handling of mutations, before or after the change is committed to the database (e.g. for special data validation, or triggering cleanup work)."}),"\n",(0,t.jsxs)(n.p,{children:["For this we can implement a global ",(0,t.jsx)(n.code,{children:"mutationHook"})," function that will be called for all mutations with parameters describing the context:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { MutationHook } from '@smartive/graphql-magic';\n\nexport const mutationHook: MutationHook = (model, action, when, data: { prev, input, normalizedInput, next }, ctx) => {\n    switch (model.name) {\n        // perform model specific tasks\n    }\n\n    // perform global tasks\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Then feed it to ",(0,t.jsx)(n.code,{children:"graphql-magic"}),"'s ",(0,t.jsx)(n.code,{children:"execute"})," function:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const result = await execute({\n    ...\n    mutationHook\n})\n"})}),"\n",(0,t.jsx)(n.p,{children:"The mutation hook function takes the following arguments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"model"})," the model for the entity being mutated"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"action"}),": can be ",(0,t.jsx)(n.code,{children:"'create'"}),", ",(0,t.jsx)(n.code,{children:"'update'"}),", ",(0,t.jsx)(n.code,{children:"'delete'"})," or ",(0,t.jsx)(n.code,{children:"'restore'"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"when"}),": either ",(0,t.jsx)(n.code,{children:'"before"'})," or ",(0,t.jsx)(n.code,{children:'"after"'})," the mutation is committed to the database"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," containing the entity in various states:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"prev"}),": the previous entity (undefined in creation mutations)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"input"}),": input from the user"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"normalizedInput"}),": input to feed to the database (e.g. including generated values such as ",(0,t.jsx)(n.code,{children:"id"}),", ",(0,t.jsx)(n.code,{children:"createdAt"}),"...)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"next"}),": the full next entity after changes are applied"]}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var t=s(6540);const r={},o=t.createContext(r);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);